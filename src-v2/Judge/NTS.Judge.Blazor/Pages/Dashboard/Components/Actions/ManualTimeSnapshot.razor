@using NTS.Domain.Objects
@using NTS.Judge.Adapters.Behinds
@using NTS.Judge.Blazor.Ports

@inherits NotComponent

<MudStack Row="true" AlignItems="AlignItems.Center">
    <MudTextField @bind-Value="_time" T="string" Label="Time" Mask="@(new PatternMask("00:00:00"))" Class="mr-2"/>
    <MudButtonGroup OverrideStyles="false" Size="Size.Medium">
        <MudButton Color="Color.Primary" Variant="Variant.Filled" OnClick="Process">Process</MudButton>
        <MudIconButton Icon="@Icons.Material.Outlined.Timer" Color="Color.Primary" Variant="Variant.Outlined" OnClick="SnapshotTime">Snapshot</MudIconButton>
    </MudButtonGroup>
</MudStack>

@code {
    [Inject]
    IParticipationBehind _participationBehind { get; set; } = default!;
    [Inject]
    ISnapshotProcess _snapshotProcess { get; set; } = default!;
    private const string DEFAULT_TIME = "00:00:00";
    private string _time = DEFAULT_TIME;
    
    protected override async Task OnInitializedAsync()
    {
        await Observe(_participationBehind);
    }

    public void SnapshotTime()
    {
        var currentTime = DateTime.Now.TimeOfDay;
        _time = currentTime.ToString();
    }

    public Snapshot CreateSnapshot(DateTime timeStampDateTime)
    {
        var timestamp = new Timestamp(timeStampDateTime);

        return new Snapshot(
            _participationBehind.SelectedParticipation!.Tandem.Number, 
           SnapshotType.Automatic,
           SnapshotMethod.Manual,
           timestamp);
    }

    public void Process()
    {
        if (_time == DEFAULT_TIME)
        {
            return;
        }

        var inputTime = TimeSpan.Parse(_time);
        var time = DateTime.Today + inputTime;
        var timestamp = new Timestamp(time);
        var snapshot = new Snapshot(
            _participationBehind.SelectedParticipation!.Tandem.Number,
           SnapshotType.Automatic,
           SnapshotMethod.Manual,
           timestamp);
        _snapshotProcess.Process(snapshot);

        _time = DEFAULT_TIME;
    }
}
